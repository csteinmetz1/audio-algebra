# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/audio-algebra',
                'doc_host': 'https://drscotthawley.github.io',
                'git_url': 'https://github.com/drscotthawley/audio-algebra',
                'lib_path': 'audio_algebra'},
  'syms': { 'audio_algebra.DiffusionDVAE': { 'audio_algebra.DiffusionDVAE.DiffusionDVAE': ( 'diffusiondvae.html#diffusiondvae',
                                                                                            'audio_algebra/DiffusionDVAE.py'),
                                             'audio_algebra.DiffusionDVAE.DiffusionDVAE.__init__': ( 'diffusiondvae.html#diffusiondvae.__init__',
                                                                                                     'audio_algebra/DiffusionDVAE.py'),
                                             'audio_algebra.DiffusionDVAE.DiffusionDVAE.decode': ( 'diffusiondvae.html#diffusiondvae.decode',
                                                                                                   'audio_algebra/DiffusionDVAE.py'),
                                             'audio_algebra.DiffusionDVAE.DiffusionDVAE.encode': ( 'diffusiondvae.html#diffusiondvae.encode',
                                                                                                   'audio_algebra/DiffusionDVAE.py'),
                                             'audio_algebra.DiffusionDVAE.alpha_sigma_to_t': ( 'diffusiondvae.html#alpha_sigma_to_t',
                                                                                               'audio_algebra/DiffusionDVAE.py'),
                                             'audio_algebra.DiffusionDVAE.get_alphas_sigmas': ( 'diffusiondvae.html#get_alphas_sigmas',
                                                                                                'audio_algebra/DiffusionDVAE.py'),
                                             'audio_algebra.DiffusionDVAE.get_crash_schedule': ( 'diffusiondvae.html#get_crash_schedule',
                                                                                                 'audio_algebra/DiffusionDVAE.py'),
                                             'audio_algebra.DiffusionDVAE.sample': ( 'diffusiondvae.html#sample',
                                                                                     'audio_algebra/DiffusionDVAE.py')},
            'audio_algebra.aa_mixer': { 'audio_algebra.aa_mixer.AudioAlgebra': ('aa-mixer.html#audioalgebra', 'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.AudioAlgebra.__init__': ( 'aa-mixer.html#audioalgebra.__init__',
                                                                                          'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.AudioAlgebra.distance': ( 'aa-mixer.html#audioalgebra.distance',
                                                                                          'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.AudioAlgebra.forward': ( 'aa-mixer.html#audioalgebra.forward',
                                                                                         'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.AudioAlgebra.loss': ( 'aa-mixer.html#audioalgebra.loss',
                                                                                      'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.AudioAlgebra.mag': ( 'aa-mixer.html#audioalgebra.mag',
                                                                                     'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.DiffusionDVAE': ( 'aa-mixer.html#diffusiondvae',
                                                                                  'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.DiffusionDVAE.__init__': ( 'aa-mixer.html#diffusiondvae.__init__',
                                                                                           'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.DiffusionDVAE.decode': ( 'aa-mixer.html#diffusiondvae.decode',
                                                                                         'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.DiffusionDVAE.decode_it': ( 'aa-mixer.html#diffusiondvae.decode_it',
                                                                                            'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.DiffusionDVAE.encode': ( 'aa-mixer.html#diffusiondvae.encode',
                                                                                         'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.DiffusionDVAE.encode_it': ( 'aa-mixer.html#diffusiondvae.encode_it',
                                                                                            'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.EmbedBlock': ('aa-mixer.html#embedblock', 'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.EmbedBlock.__init__': ( 'aa-mixer.html#embedblock.__init__',
                                                                                        'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.EmbedBlock.forward': ( 'aa-mixer.html#embedblock.forward',
                                                                                       'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.aa_demo': ('aa-mixer.html#aa_demo', 'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.alpha_sigma_to_t': ( 'aa-mixer.html#alpha_sigma_to_t',
                                                                                     'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.get_alphas_sigmas': ( 'aa-mixer.html#get_alphas_sigmas',
                                                                                      'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.get_crash_schedule': ( 'aa-mixer.html#get_crash_schedule',
                                                                                       'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.get_stems_faders': ( 'aa-mixer.html#get_stems_faders',
                                                                                     'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.main': ('aa-mixer.html#main', 'audio_algebra/aa_mixer.py'),
                                        'audio_algebra.aa_mixer.sample': ('aa-mixer.html#sample', 'audio_algebra/aa_mixer.py')},
            'audio_algebra.core': {'audio_algebra.core.foo': ('core.html#foo', 'audio_algebra/core.py')},
            'audio_algebra.train_aa_mixer': { 'audio_algebra.train_aa_mixer.AudioAlgebra': ( 'aa-mixer.html#audioalgebra',
                                                                                             'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.AudioAlgebra.__init__': ( 'aa-mixer.html#audioalgebra.__init__',
                                                                                                      'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.AudioAlgebra.distance': ( 'aa-mixer.html#audioalgebra.distance',
                                                                                                      'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.AudioAlgebra.forward': ( 'aa-mixer.html#audioalgebra.forward',
                                                                                                     'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.AudioAlgebra.loss': ( 'aa-mixer.html#audioalgebra.loss',
                                                                                                  'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.AudioAlgebra.mag': ( 'aa-mixer.html#audioalgebra.mag',
                                                                                                 'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.DiffusionDVAE': ( 'aa-mixer.html#diffusiondvae',
                                                                                              'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.DiffusionDVAE.__init__': ( 'aa-mixer.html#diffusiondvae.__init__',
                                                                                                       'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.DiffusionDVAE.configure_optimizers': ( 'aa-mixer.html#diffusiondvae.configure_optimizers',
                                                                                                                   'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.DiffusionDVAE.decode': ( 'aa-mixer.html#diffusiondvae.decode',
                                                                                                     'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.DiffusionDVAE.encode': ( 'aa-mixer.html#diffusiondvae.encode',
                                                                                                     'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.DiffusionDVAE.training_step': ( 'aa-mixer.html#diffusiondvae.training_step',
                                                                                                            'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.EmbedBlock': ( 'aa-mixer.html#embedblock',
                                                                                           'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.EmbedBlock.__init__': ( 'aa-mixer.html#embedblock.__init__',
                                                                                                    'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.EmbedBlock.forward': ( 'aa-mixer.html#embedblock.forward',
                                                                                                   'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.ad_encode_it': ( 'aa-mixer.html#ad_encode_it',
                                                                                             'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.alpha_sigma_to_t': ( 'aa-mixer.html#alpha_sigma_to_t',
                                                                                                 'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.demo': ( 'aa-mixer.html#demo',
                                                                                     'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.get_alphas_sigmas': ( 'aa-mixer.html#get_alphas_sigmas',
                                                                                                  'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.get_crash_schedule': ( 'aa-mixer.html#get_crash_schedule',
                                                                                                   'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.get_stems_faders': ( 'aa-mixer.html#get_stems_faders',
                                                                                                 'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.main': ( 'aa-mixer.html#main',
                                                                                     'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.make_autocast_model_fn': ( 'aa-mixer.html#make_autocast_model_fn',
                                                                                                       'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.make_cond_model_fn': ( 'aa-mixer.html#make_cond_model_fn',
                                                                                                   'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.make_eps_model_fn': ( 'aa-mixer.html#make_eps_model_fn',
                                                                                                  'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.pie_sample': ( 'aa-mixer.html#pie_sample',
                                                                                           'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.pie_step': ( 'aa-mixer.html#pie_step',
                                                                                         'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.plms2_sample': ( 'aa-mixer.html#plms2_sample',
                                                                                             'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.plms2_step': ( 'aa-mixer.html#plms2_step',
                                                                                           'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.plms_sample': ( 'aa-mixer.html#plms_sample',
                                                                                            'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.plms_step': ( 'aa-mixer.html#plms_step',
                                                                                          'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.prk_sample': ( 'aa-mixer.html#prk_sample',
                                                                                           'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.prk_step': ( 'aa-mixer.html#prk_step',
                                                                                         'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.sample': ( 'aa-mixer.html#sample',
                                                                                       'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.setup_weights': ( 'aa-mixer.html#setup_weights',
                                                                                              'audio_algebra/train_aa_mixer.py'),
                                              'audio_algebra.train_aa_mixer.transfer': ( 'aa-mixer.html#transfer',
                                                                                         'audio_algebra/train_aa_mixer.py')}}}